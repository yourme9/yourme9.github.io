(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{417:function(s,t,n){"use strict";n.r(t);var a=n(0),e=Object(a.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h2",{attrs:{id:"在进入正题之前-我们先了解一下什么是变量提升与函数声明提升"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#在进入正题之前-我们先了解一下什么是变量提升与函数声明提升"}},[s._v("#")]),s._v(" 在进入正题之前，我们先了解一下什么是变量提升与函数声明提升")]),s._v(" "),t("ol",[t("li",[t("strong",[s._v("变量声明提升")]),t("br"),s._v("\n通过var定义(声明)的变量, 在定义语句之前就可以访问到"),t("br"),s._v("\n值: undefined")]),s._v(" "),t("li",[t("strong",[s._v("函数声明提升")]),t("br"),s._v("\n通过function声明的函数, 在之前就可以直接调用"),t("br"),s._v("\n值: 函数定义(对象)")])]),s._v(" "),t("hr"),s._v(" "),t("p",[t("strong",[s._v("首先看下变量声明提升")])]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[s._v("  console"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//undefined")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" a "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("在第一行我们打印了a，但是我们第二行才定义a，正常情况下，第一行的代码是读取不到a的，从而浏览器应该报错，而因为通过var声明的变量，会在定义之前就可访问，但是不会赋值，所以在这里打印的值是underfined")]),s._v(" "),t("hr"),s._v(" "),t("p",[t("strong",[s._v("再看一下函数声明提升")])]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[s._v("  "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("a")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("a")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      console"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'我是函数a'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[s._v("同样的道理，第一行我们调用了a函数，但是第二行我们才进行函数声明，因为函数声明提前的原因，而且会赋值，所以在这里打印'我是函数a'。")]),s._v(" "),t("blockquote",[t("p",[s._v("最后注意一点，用var a = function(){}方式定义函数的，不会出现函数声明提升")])])])}),[],!1,null,null,null);t.default=e.exports}}]);